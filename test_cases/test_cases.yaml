- name: "Test Addition"
  code: +
  test_cases:
    - input: [1, 1]
      output: [2]
    - input:
        - [1, 2, 3]
        - [4, 5, 6]
      output:
        - [1, 2, 3, 4, 5, 6]
    - input: [null, null]
      output:
        - null
    - input: ["alpha", "beta"]
      output:
        - "alphabeta"
    - input: ["alpha", 12]
      output:
        - "alpha12"
    - input: [12, "alpha"]
      output:
        - null
    - input: [12, null]
      output:
        - 12
    - input: [[1, 2, 3], 4]
      output:
        - [1, 2, 3, 4]
- name: "Test Multiplication"
  code: "*"
  test_cases:
    - input: [3, 5]
      output: [15]
    - input:
        - [1, 2, 3]
        - [4, 5, 6]
      output:
        - [1, 4, 5, 6, 2, 4, 5, 6, 3]
    - input: [null, null]
      output:
        - null
    - input: ["abc", "beta"]
      output:
        - "abetabbetac"
    - input: ["alpha", 3]
      output:
        - "alphaalphaalpha"
    - input: [12, "alpha"]
      output:
        - null
    - input: [12, null]
      output:
        - 12
    - input: [[1, 2, 3], 4]
      output:
        - [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]
- name: "Test Division"
  code: "/"
  test_cases:
    - input: [15, 3]
      output: [5]
    - input: [15, 2]
      output: [7.5]
    - input:
        - [1, 2, 3, 4, 5]
        - [2, 3]
      output:
        - [[1], [4, 5]]
    - input: [null, null]
      output:
        - null
    - input: ["elto$beko$b", "$b"]
      output:
        - ["elto", "eko", ""]
    - input: ["alpha", 3]
      output:
        - ["alpha"]
    - input: ["alpha", ""]
      output:
        - ["a", "l", "p", "h", "a"]
    - input: [12, "alpha"]
      output:
        - null
    - input: [12, null]
      output:
        - 12
    - input: [[1, 2, 3, 4, 5], 4]
      output:
        - [[1, 2, 3], [5]]
- name: "Test Subtraction"
  code: "-"
  test_cases:
    - input: [1, 1]
      output:
        - 0
    - input:
        - [1, 2, 3, 4, 5, 6]
        - [3, 4, 5]
      output:
        - [1, 2, 6]
    - input: [null, null]
      output:
        - null
    - input: ["alphabeta", "phabe"]
      output:
        - "alta"
    - input: ["alpha", 12]
      output:
        - "alpha"
    - input: [12, "alpha"]
      output:
        - null
    - input: [12, null]
      output:
        - 12
    - input: [[1, 2, 3], 2]
      output:
        - [1, 3]
- name: "Test Range"
  code: r
  test_cases:
    - input: [5]
      output: [0, 1, 2, 3, 4]
- name: "Test Equality"
  code: "="
  test_cases:
    - input: [5, 5]
      output:
        - 1
    - input: [5, 6]
      output:
        - 0
    - input: [[1, 2, 3], [1, 2, 3]]
      output:
        - 1
- name: "Test Comma outside Array"
  code: "1,5"
  test_cases:
    - input: []
      output:
        - 1
        - 5
- name: "Test Comma with range"
  code: "r,5"
  test_cases:
    - input: [3]
      output:
        - 0
        - 1
        - 2
        - 5
- name: "Test Comma with reversed"
  code: "5,r"
  test_cases:
    - input: [3]
      output:
        - 5
        - 0
        - 1
        - 2
- name: "Test Comma leave some on stack"
  code: "3 5,"
  test_cases:
    - input: []
      output:
        - 5
        - 3
- name: "Test Number Parsing"
  code: "255,81,36,1,41242"
  test_cases:
    - input: []
      output:
        - 255
        - 81
        - 36
        - 1
        - 41242
- name: "Test String Parsing"
  code: "\"abc\" \"abc\\\"def\" \"\n\""
  test_cases:
    - input: []
      output:
        - "abc"
        - 'abc"def'
        - "\n"
- name: "Test Unclosed"
  code: '"abc \"def'
  test_cases:
    - input: []
      output:
        - 'abc "def'
- name: "Test Array Wrap Range"
  code: "[5r]"
  test_cases:
    - input: []
      output:
        - [0, 1, 2, 3, 4]
- name: "Test Empty Array"
  code: "3[]"
  test_cases:
    - input: []
      output:
        - 3
        - []
- name: "Test Missing Right Bracket"
  code: "[5r"
  test_cases:
    - input: []
      output:
        - [0, 1, 2, 3, 4]
- name: "Test Use of Comma"
  code: "[5r,3"
  test_cases:
    - input: []
      output:
        - [0, 1, 2, 3, 4, 3]
- name: "Test Multiple Outputs"
  code: "[2r3"
  test_cases:
    - input: []
      output:
        - [0, 3, 1, 3]
- name: "Test Nesting"
  code: "3[r[1+r]]"
  test_cases:
    - input: []
      output:
        - [[0], [0, 1], [0, 1, 2]]
- name: "Test Unwrap"
  code: "u"
  test_cases:
    - input:
        - []
      output: []
    - input:
        - [1]
      output: [1]
    - input:
        - [5, 8, 24]
      output: [5, 8, 24]
- name: "Test If"
  code: "?1]0]"
  test_cases:
    - input:
        - 0
      output:
        - 0
    - input:
        - []
      output:
        - 0
    - input:
        - 1
      output:
        - 1
    - input:
        - "abc"
      output:
        - 1
- name: "Test Variadic If"
  code: "?2 1]7 3]-"
  test_cases:
    - input:
        - 0
      output:
        - 4
    - input:
        - 1
      output:
        - 1
- name: "Test Asymetric"
  code: "?2]3 7]+"
  test_cases:
    - input:
        - 0
      output:
        - 10
    - input:
        - 1
      output:
        - 2
- name: "Test Reverse"
  code: "?3 7]2]+"
  test_cases:
    - input:
        - 0
      output:
        - 2
    - input:
        - 1
      output:
        - 10
- name: "Test Asymetric No Reduce"
  code: "?2]3 7]"
  test_cases:
    - input:
        - 0
      output:
        - 3
        - 7
    - input:
        - 1
      output:
        - 2
        - null
- name: "Test Swap"
  code: "1 2 3$"
  test_cases:
    - input: []
      output:
        - 1
        - 3
        - 2
- name: "Test Dup"
  code: "412:"
  test_cases:
    - input: []
      output:
        - 412
        - 412
- name: "Test Over"
  code: "1 2 3 4 @"
  test_cases:
    - input: []
      output:
        - 1
        - 2
        - 3
        - 4
        - 3
- name: "Test Swap in Array"
  code: "1 2 3[$"
  test_cases:
    - input: []
      output:
        - 1
        - [3, 2]
- name: "Test Dup in Array"
  code: "412[:"
  test_cases:
    - input: []
      output:
        - [412, 412]
- name: "Test Over in Array"
  code: "1 2 3 4 [@"
  test_cases:
    - input: []
      output:
        - 1
        - 2
        - [3, 4, 3]
- name: "Test Reduce"
  code: 0R4r]+]
  test_cases:
    - input: []
      output:
        - 6
- name: "Test Array Sum"
  code: s
  test_cases:
    - input:
        - ["abc", 1, 2, [], null]
      output:
        - "abc12[]"
- name: "Test Iterator Sum"
  code: Su]
  test_cases:
    - input:
        - ["abc", 1, 2, [], null]
      output:
        - "abc12[]"
- name: "Test Index"
  code: '[0,"1",2,3,4]$i'
  test_cases:
    - input:
        - 0
      output:
        - 0
    - input:
        - 1
      output:
        - "1"
    - input:
        - [3, 1]
      output:
        - [3, "1"]
    - input:
        - -1
      output:
        - 4
    - input:
        - -3
      output:
        - 2
    - input:
        - -5
      output:
        - 0
- name: "Generator Index"
  code: "I5r3+2/]"
  test_cases:
    - input:
        - 0
      output:
        - 1.5
    - input:
        - [1, 2]
      output:
        - [2, 2.5]
    - input:
        - -1
      output:
        - 3.5
    - input:
        - [-1, 0]
      output:
        - [3.5, 1.5]
- name: "Generator Zip"
  code: "Z5r]3r2]+"
  test_cases:
    - input: []
      output: [0, 2, 1, 3, 2, 4]
- name: "Array Zip"
  code: "z"
  test_cases:
    - input:
        - [1, 2, 3, 4, 5]
        - [null, 17]
      output:
        - [[1, null], [2, 17]]
    - input:
        - [null, 17]
        - [1, 2, 3, 4, 5]
      output:
        - [[null, 1], [17, 2]]
    - input:
        - "boredom"
        - "camoflage"
      output:
        - [
            ["b", "c"],
            ["o", "a"],
            ["r", "m"],
            ["e", "o"],
            ["d", "f"],
            ["o", "l"],
            ["m", "a"],
          ]
- name: Test Floor
  code: "f"
  test_cases:
    - input:
        - 3.2432
      output:
        - 3
    - input:
        - -5.25
      output:
        - -6
    - input:
        - [1, 2, 3.5]
      output:
        - [1, 2, 3.5]
    - input:
        - [1, 2, [3, 4], [5.2, [3], []]]
      output:
        - [1, 2, 3, 4, 5.2, 3]
